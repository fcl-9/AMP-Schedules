@using Resources

@{
    ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<h2 style="text-align: center">Events</h2>
<br/>
<br/>
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <h4>Today's Events</h4>
            <br/>
            <div class="NextEvent" id="NextEvent">
            </div>
        </div>
        <div class="col-sm-6">
            <div class="container">
                <h4 style="text-align: left">Future Events</h4>
                <ul id="eventLimit" class="nav nav-tabs">
                    <li role="presentation" class="active tab"><a href="#1">1 day</a></li>
                    <li role="presentation" class="tab"><a href="#2">2 days</a></li>
                    <li role="presentation" class="tab"><a href="#3">3 days</a></li>
                </ul>
                <div class="tab-content FutureEvents">
                    <br />
                    <div class="tab-pane active" id="FutureEvents">
                    </div>
                </div>
            </div>
            <br/>
            <div class="FutureEvents" id="FutureEvents">
            </div>
        </div>
    </div>
</div> 

@section scripts
{
    @Scripts.Render("~/Scripts/moment-with-locales.min.js")
    <script>
        $(function () {

            $('div.segmented-control a').on('click', function () {

                $('div.segmented-control a').each(function (i, e) {
                    $(e).removeClass('active');
                });

                $(this).addClass('active');
                $(this).find('input').prop('checked', true);
                return false;
            });

        });

        function changeFunc($i) {
            $("#NextEvent").html("");
            $("#FutureEvents").html("");
           
            requestEvents(printInformation, $i);
        }

        $().ready(function () {   
            requestEvents(printInformation, 1);
            $("#eventLimit .tab").click(function (e) {
                $(e.target).tab("show");
                changeFunc($(e.target).html().replace(/[^\d.]/g, ''));
            });
        });
        function addDays(date, days) {
            var result = new Date(date);
            result.setDate(result.getDate() + parseInt(days));
            return result;
        }
        //Ajax Request for events
        function requestEvents(returnFunction, DaysFilter) {
            
            var data = {};

            // data["start"] = moment().isoWeekday(1).format("YYYY-MM-DD");
            //data["end"] = moment().isoWeekday(7).format("YYYY-MM-DD");
            var DateInicial = new Date();
            var DateFinal = new Date();
            var hh = DateInicial.getHours();
            var mm = DateInicial.getMinutes();
            var ss = DateInicial.getSeconds();
            if (hh < 10) { hh = "0" + hh; }
            if (mm < 10) { mm = "0" + mm; }
            if (ss < 10) { ss = "0" + ss; }
            DateFinal = moment(addDays(DateInicial, DaysFilter)).format("YYYY-MM-DD");
            DateInicial = moment(DateInicial).format("YYYY-MM-DD");
            alert(DateInicial + "  " + DateFinal);
            $.ajax({
                type: "GET",
                url: '/Event/ReturnEvents?start=' + DateInicial + 'T' + hh + ':' + mm + ':' + ss + '&end=' + DateFinal + 'T23:53:53',
                data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: returnFunction,
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });
        }

        //Adds Information to the page
        function printInformation(events) {
            console.log(events);
            var ClassName = undefined;
            var StartingTime = undefined;
            var ClassRoom = undefined;
            var Floor = undefined;
            var iteration = 0;
            var DateInicial = new Date();
            DateInicial = moment(DateInicial).format("YYYY-MM-DD");
            $.each(sortBy(events, { prop: "StartTime" }),
                function(key, value) { //Teacher -> Name Email, StartTime, EndTime, Rooms.Name Rooms Floor

                    $.each(value.Courses,
                        function(chave, valor) {
                            ClassName = value.Name;
                            StartingTime = value.StartTime;

                            $.each(value.Rooms,
                                function(property, val) {
                                    ClassRoom = val.Name;
                                    Floor = val.Floor;
                                });
                        });
                    if (DateInicial == moment(StartingTime).format("YYYY-MM-DD")) {
                        renderTodayEvent(ClassName, StartingTime, ClassRoom, Floor);
                    } else
                    {
                        renderFutureEvent(ClassName, StartingTime, ClassRoom, Floor);
                    }

                });
        }

        function renderTodayEvent(ClassName, StartingTime, ClassRoom, Floor) {
            
            $('.NextEvent').append(
                '<div class="panel-group">' +
                '<div class="panel panel-primary">' +
                '<div class="panel-body">' +
                '<h5>' +
                ClassName +
                '</h5>' +
                '<br/>' +
                '<p>Inicio: ' +
                StartingTime +
                ' H</p>' +
                '<p>' +
                ClassRoom +
                '</p>' +
                '<p>Piso: ' +
                Floor +
                '</p>' +
                '</div>' +
                '</div>' +
                '</div>'
            );

        }
        function renderFutureEvent(ClassName, StartingTime, ClassRoom, Floor) {
            $('.FutureEvents').append(
                '<div class="panel-group">' +
                '<div class="panel panel-primary">' +
                '<div class="panel-body">' +
                '<h5>' +
                ClassName +
                '</h5>' +
                '<br/>' +
                '<p>Inicio: ' +
                StartingTime +
                ' H</p>' +
                '<p>' +
                ClassRoom +
                '</p>' +
                '<p>Piso: ' +
                Floor +
                '</p>' +
                '</div>' +
                '</div>' +
                '</div>'
            );

        }
        //Presents officehours of week
       

        var sortBy = (function() {

            const _defaults = {
                parser: (x) => x,
                desc: false
            };

            const isObject = (o) => o !== null && typeof o === "object";
            const isDefined = (v) => typeof v !== "undefined";

            //gets the item to be sorted
            function getItem(x) {
                const isProp = isObject(x) && isDefined(x[this.prop]);
                return this.parser(isProp ? x[this.prop] : x);
            }

            return function(array, options) {
                if (!(array instanceof Array) || !array.length)
                    return [];
                const opt = Object.assign({}, _defaults, options);
                opt.desc = opt.desc ? -1 : 1;
                return array.sort(function(a, b) {
                    a = getItem.call(opt, a);
                    b = getItem.call(opt, b);
                    return opt.desc * (a < b ? -1 : +(a > b));
                });
            };

        }());
    </script>

}
   

