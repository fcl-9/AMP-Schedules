@using Resources
<!--  Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license.
        See LICENSE in the source repository root for complete license information. -->

@{
  ViewBag.Title = Resource.App_Name;
}
@section style
{
    @Styles.Render("~/Content/fullcalendar.min.css")
    @Styles.Render("~/Content/ColorPicker/jquery.simplecolorpicker.css")
    @Styles.Render("~/Content/button.css")
    @Styles.Render("~/Content/jquery.datetimepicker.min.css")


}
<h1 style="text-align: center">Hello, @(System.Security.Claims.ClaimsPrincipal.Current.FindFirst("preferred_username")?.Value)</h1>

    <br/>
    <br/>
<div class="">
    <div class="col-sm-3 form-group">
        <label class="form-check-label">Filters By Name:</label>
        <div class="form-check-input" id="nameFilters"></div>
        <br>
        <label class="form-check-label">Filter by Type: </label>
        <br />
        <div class="checkbox">
            <label>
                <input class="form-check-input" type="checkbox" name="Type" value="Lesson">Lesson
            </label>
        </div>
        <div class="checkbox">
            <label>
                <input class="form-check-input" type="checkbox" name="Type" value="EvaluationMoment">Evaluation Moment
            </label>
        </div>
        <div class="checkbox">
            <label>
                <input class="form-check-input" type="checkbox" name="Type" value="OfficeHours">Office Hours
            </label>
        </div>
        <br />
    </div>

    <div class="col-sm-9" id='calendar'></div>
    <div class="addEventButton">
        <button type="button" class="btn-circle btn-lg" id="addEvent">
            <i class="glyphicon glyphicon-plus iconPlus"></i>
        </button>
    </div>
</div>

<div id="fullCalModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                <h4 id="modalTitle" class="modal-title"></h4>
            </div>
            <div id="modalBody" class="modal-body">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="#1" data-toggle="tab">Info</a>
                    </li>
                    <li>
                        <a href="#2" data-toggle="tab">Color</a>
                    </li>
                    <li>
                        <a href="#3" data-toggle="tab">Alert</a>
                    </li>
                </ul>

                <div class="tab-content ">
                    <div class="tab-pane active" id="1">
                        <p>
                            Start: <span id="startTime"></span>
                        </p>
                        <p>
                            End: <span id="endTime"></span>
                        </p>
                        <div id="rooms"></div>
                        <div id="lessonType"></div>
                        <div id="teacher"></div>
                        <div id="description"></div>
                    </div>
                    <div class="tab-pane" id="2">
                        <p>You can change the color of each occurence of the item you selected.</p>
                        <select name="colorpicker">
                            <option value="#337ab7">Default Blue</option>
                            <option value="#7bd148">Green</option>
                            <option value="#5484ed">Bold blue</option>
                            <option value="#a4bdfc">Blue</option>
                            <option value="#46d6db">Turquoise</option>
                            <option value="#7ae7bf">Light green</option>
                            <option value="#51b749">Bold green</option>
                            <option value="#fbd75b">Yellow</option>
                            <option value="#ffb878">Orange</option>
                            <option value="#ff887c">Red</option>
                            <option value="#dc2127">Bold red</option>
                            <option value="#dbadff">Purple</option>
                            <option value="#e1e1e1">Gray</option>
                        </select>
                    </div>
                    <div class="tab-pane" id="3">
                        <form id="alertForm">
                            <label class="control-label">Configure Alerts</label>
                            <div class="col-sm-12 form-group">
                                <div class="col-sm-5">
                                    <input class="form-control number"/>
                                </div>
                                <div class="col-sm-5">
                                    <select class="form-control timeUnit" >
                                        <option>Minutes</option>
                                        <option>Hours</option>
                                        <option>Days</option>
                                        <option>Weeks</option>
                                    </select>
                                </div>
                                <div class="col-sm-2">
                                    <button class="rm-alert btn btn-danger">Remove</button>
                                </div>
                            </div>
                        </form>
                        <button id="addAlert" class="btn btn-default">Add new alert</button>
                    </div>
                </div>
            </div>
                  
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button class="btn btn-danger" id="remove">Remove Event</button>
                <button class="btn btn-primary" id="submit">Save</button>
            </div>
        </div>
    </div>
</div>

           

<div id="addEventModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                <h4 id="modalTitle" class="modal-title-addEvent"></h4>
            </div>
            <div id="modalBody" class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="new_event_name" class="col-sm-2 control-label">Event Name: </label>
                        <div class="col-sm-10">
                            <input class="form-control" id="new_event_name">
                        </div>
                     </div>

                    <div class="form-group">
                        <label for="new_event_startTime" class="col-sm-2 control-label">Start Time: </label>
                        <div class="col-sm-10">
                            <input class="form-control" id="datetimepicker_starttime" type="text">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="new_event_endTime" class="col-sm-2 control-label">End Time: </label>
                        <div class="col-sm-10">
                            <input class="form-control" id="datetimepicker_endtime" type="text">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="new_event_room" class="col-sm-2 control-label">Room: </label>
                        <div class="col-sm-10">
                            <select id="new_event_room" class="form-control">
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="new_event_room" class="col-sm-2 control-label">Course: </label>
                        <div class="col-sm-10">
                            <select id="new_event_course" class="form-control">

                            </select>
                        </div>
                   </div>

                    <div class="form-group">
                        <label for="new_event_room" class="col-sm-2 control-label">Description: </label>
                        <div class="col-sm-10">
                            <input class="form-control" id="new_event_description">
                        </div>
                    </div>
                </form>
</div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" id="saveNewEvent">Save</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/Scripts/moment-with-locales.min.js")
    @Scripts.Render("~/Scripts/fullcalendar.min.js")
    @Scripts.Render("~/Scripts/ColorPicker/jquery.simplecolorpicker.js")

    @Scripts.Render("~/Scripts/jquery.datetimepicker.full.js")


    <script>
        var currentEvent = null;

        //Renders the calendar.
        function calendar(urlToRequestData) {
            // page is now ready, initialize the calendar...
            $('#calendar')
                .fullCalendar({
                    // put your options and callbacks here
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    navLinks: true, // can click day/week names to navigate views
                    editable: true,
                    eventLimit: true, // allow "more" link when too many events
                    events: '' + urlToRequestData + '',
                    eventClick: function(event, jsEvent, view) {
                        currentEvent = event;
                        if (!currentEvent.editable) {
                            $("#remove").attr("disabled", "disabled");
                        } else {
                            $("#remove").removeAttr("disabled");
                        }
                        console.log(event);
                        console.log(moment(event.start).format("MMM Do H:mm"));
                        $('#modalTitle').html(event.title);
                        $('#startTime').html(moment(event.start).format("Do MMM YYYY H:mm"));
                        $('#endTime').html(moment(event.end).format("Do MMM YYYY H:mm"));
                        $("#rooms")
                            .html(function() {
                                var rooms = "Room(s): <br><ul>";
                                $.each(event.rooms,
                                    function(key, room) {
                                        rooms += "<li>" +
                                            room.Name +
                                            "<ul><li> Floor: " +
                                            room.Floor +
                                            "</li><li>Building: " +
                                            room.Building.Name +
                                            "</li></ul>";
                                    })
                                rooms += "</ul>";
                                return rooms;
                            });
                        if (event.teacher != null) {

                            $("#teacher").html("Teacher: " + event.teacher.Name);
                            $("#lessonType").html("Lesson: " + event.lessonType);
                        }
                        $('#description').html(event.description);
                        $('#eventUrl').attr('href', event.url);
                        $('#fullCalModal').modal();
                    }
                });
        }


        $()
            .ready(function() {
                getCourses(renderFilterCheckBoxes);
            });

        //Render CheckBox Filters
        function renderFilterCheckBoxes(courses) {
            $("#nameFilters")
                .html(function() {
                    var mCourses = "";
                    $.each(courses,
                        function(property, value) {
                            mCourses += "" +
                                "<div class='checkbox'>" +
                                "<label>" +
                                "<input type='checkbox' name='ClassName' value='" +
                                value.Name +
                                "'>" +
                                value.Name +
                                "</label>" +
                                "</div>";
                        });
                    return mCourses;
                });
            applyFilters();
        }

        //Add Courses to SelectBox in Event Addition
        function addCourseToEventAdder(courses) {
            $("#new_event_course")
                .html(function() {
                    var mCourses = "";
                    $.each(courses,
                        function(property, value) {
                            mCourses += "<option value='" +
                                value.Name +
                                "'>" +
                                value.Name +
                                "</option>";
                        });
                    return mCourses;
                });
        }

        //Adding Rooms 
        function addRoomToEventAdder(rooms) {
            $("#new_event_room")
                .html(function() {
                    var room = "";
                    $.each(rooms,
                        function(property, value) {
                            $.each(value.Rooms,
                                function(key, val) {
                                    room += "<option value='" +
                                        val.Id +
                                        "'>" +
                                        value.Name +
                                        " - " +
                                        val.Name +
                                        "</option>";
                                });
                        });
                    return room;
                });
        }


        //Get my courses
        function getCourses(functionRender) {
            $.ajax({
                type: "GET",
                url: "/Courses",
                success: functionRender,
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });

        }

        //Get Every Room 
        function getRooms(functionRender) {
            $.ajax({
                type: "GET",
                url: "/Rooms",
                success: functionRender,
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });
        }

        //Load The Calendar with it's default events, the color picker and the datetime pickers
        $()
            .ready(function() {
                calendar('/Home/CalendarDefaultData');
                $('select[name="colorpicker"]').simplecolorpicker();

                $("#datetimepicker_starttime")
                    .datetimepicker({
                        minDate: 0,
                        minTime: 0
                    });
            });

        //Allow to modify colors and add alerts.
        $()
            .ready(function() {
                $("#addAlert")
                    .click(function() {
                        $("#alertForm")
                            .append('' +
                                '<div class="col-sm-12 form-group">' +
                                '<div class="col-sm-5">' +
                                '<input class="form-control number" />' +
                                '</div>' +
                                '<div class="col-sm-5">' +
                                '<select class="form-control timeUnit"  >' +
                                '<option>Minutes</option>' +
                                '<option>Hours</option>' +
                                '<option>Days</option>' +
                                '<option>Weeks</option>' +
                                '</select>' +
                                '</div>' +
                                '<div class="col-sm-2">' +
                                '<button class="rm-alert btn btn-danger">Remove</button>' +
                                '</div>' +
                                '</div>'
                            );
                    });

                $("#alertForm")
                    .on("click",
                        ".rm-alert",
                        function(e) {
                            alert("asd");
                            e.preventDefault();
                            $(this).parent().parent().remove();
                        });

                $("#submit")
                    .click(function() {
                        if ($("#1").hasClass('active')) {
                            console.log("Do Stuff 1");
                            $('#fullCalModal').modal('hide');
                        } else if ($("#2").hasClass('active')) {
                            var colorApplyer = {};
                            //                  Event Name                  Color Picked for the event Selected.
                            colorApplyer[$('#modalTitle').text()] = $('select[name="colorpicker"]').val();
                            //Request Data
                            requestGetType("/Color/EventColor", colorApplyer);
                            $('#fullCalModal').modal('hide');
                        } else if ($("#3").hasClass('active')) {
                            //console.log(" " + $("#startTime").text()+ " " + $("#endTime").text());
                            var times = $('#alertForm').find('.number');
                            var units = $('#alertForm').find('.timeUnit');
                            var alerts = [];
                            $error = false;
                            for (var i = 0; i < times.length; i++) {
                                var alert = {}
                                if ($.isNumeric($(times[i]).val()) && $(times[i]).val() !== "") {
                                    alert['name'] = $('#modalTitle').text();
                                    alert['startTime'] = moment($("#startTime").text(), "Do MMM YYYY H:mm").format("YYYY-MM-DD HH:mm:ss");
                                    console.log(alert['startTime']);
                                    alert['endTime'] = moment($("#endTime").text(), "Do MMM YYYY H:mm").format("YYYY-MM-DD HH:mm:ss");
                                    alert['time'] = $(times[i]).val();
                                    alert['unit'] = $(units[i]).val();
                                    //This is for the time calendar
                                    alert["start"] = $('#calendar').fullCalendar('getView').start.format();
                                    alert["end"] = $('#calendar').fullCalendar('getView').end.format();
                                    alerts[i] = alert;
                                } else {
                                    $error = true;
                                    break;
                                }
                            }
                            console.log(alerts);
                            if ($error == false) {
                                
                                $.ajax({
                                    type: "GET",
                                    url: "/AddAlert/Index",
                                    data:  JSON.stringify(alerts),
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (events) {
                                        $('#calendar').fullCalendar('removeEvents'); //Removes Everything
                                        $('#calendar').fullCalendar('addEventSource', events); //Gets The Event
                                        $('#calendar').fullCalendar('rerenderEvents');
                                    },
                                    failure: function (response) {
                                        console.log("Fail");
                                        alert(response.d);
                                    }
                                });

                                $('#fullCalModal').modal('hide');
                            } else {
                                console.log("Check the data you inputed.");
                            }
                        }
                    });
            });

        //Apply Filters
        function applyFilters() {
            var selectedFilter = $("input[type=checkbox]");
            var selectedElement = undefined;
            var FilterToApply = {};

            selectedFilter.click(function() {
                selectedElement = $(this);
                if ($(this).is(':checked')) {
                    FilterToApply[$(this).val()] = $(this).attr('name');

                    //All filters from the same type will be bocked
                    selectedFilter.each(function() {
                        if ($(this).attr('name') == selectedElement.attr('name') &&
                            $(this).val() != selectedElement.val()) {
                            $(this).attr("disabled", true);
                        }
                    });


                } else {
                    var valueToRemove = $(this).val();
                    delete FilterToApply[valueToRemove];
                    console.log(FilterToApply);

                    selectedFilter.each(function() {
                        if ($(this).attr('name') == selectedElement.attr('name') &&
                            $(this).val() != selectedElement.val()) {
                            $(this).removeAttr('disabled');
                        }
                    });


                }
                //Ajax Request
                requestGetType("/Filter/AddFilter", FilterToApply);
            });

        }

        //$().ready(applyFilters());

        //Makes Request to the server
        function requestGetType(requesturl, data) {
            data["start"] = $('#calendar').fullCalendar('getView').start.format();
            data["end"] = $('#calendar').fullCalendar('getView').end.format();
            console.log("dentro do");
            $.ajax({
                type: "GET",
                url: requesturl,
                data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(events) {
                    $('#calendar').fullCalendar('removeEvents'); //Removes Everything
                    $('#calendar').fullCalendar('addEventSource', events); //Gets The Event
                    $('#calendar').fullCalendar('rerenderEvents');
                },
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });
        }


        //Show the model for a new event addtion
        $()
            .ready(function() {
                //When Button is Clicked open modal to add Event
                $("#addEvent")
                    .click(function() {
                        $(".modal-title-addEvent").html("Add a New Event");
                        getCourses(addCourseToEventAdder);
                        getRooms(addRoomToEventAdder);
                        $("#addEventModal").modal();
                    });

                //If the first value is changed after it's assigned remove the datepicker bellow
                $("#datetimepicker_starttime")
                    .change(function() {
                        var startTime = $('#datetimepicker_starttime').datetimepicker('getValue');
                        if (startTime == null) {
                            $("#datetimepicker_endtime").datetimepicker('destroy');
                            if ($("#datetimepicker_endtime").text !== "") {
                                $("#datetimepicker_endtime").val('');
                                console.log("Cleaning");
                            }
                        } else {
                            $("#datetimepicker_endtime")
                                .datetimepicker({
                                    minDate: 0,
                                    minTime: 0
                                });
                        }
                    });

                // Remove events
                $()
                    .ready(function() {
                        $("#remove")
                            .click(function() {
                                var data = {};
                                data.id = currentEvent.id;
                                data.name = currentEvent.title;
                                data.start = currentEvent.start;
                                requestGetType("/RemoveEvent/", data);
                                $("#fullCalModal").modal("hide");
                            });
                    });

                //Submit the Data of a new event
                $("#saveNewEvent")
                    .click(function() {
                        var startTime = $('#datetimepicker_starttime').datetimepicker('getValue');
                        var endtime = $("#datetimepicker_endtime").datetimepicker('getValue');
                        var today = new Date();
                        //Checking if the choosen time are greater than now and end time is greater than start time.
                        if (startTime > today && endtime > today && endtime > startTime) {
                            var newEvent = {}; //Generates the json to send to the server and store it in the database.
                            var name = $("#new_event_name").val();
                            var beginsAt = $("#datetimepicker_starttime").datetimepicker('getValue');
                            var endsAt = $("#datetimepicker_endtime").datetimepicker('getValue');
                            var room = $("#new_event_room").val();
                            var course = $("#new_event_course").val();
                            var description = $("#new_event_description").val();
                            //Check if there is any empty field
                            if (name !== "" &&
                                beginsAt !== "" &&
                                endsAt !== "" &&
                                room !== "" &&
                                $.isNumeric(room) &&
                                course !== "" &&
                                description !== "") {
                                //Parses Data
                                beginsAt = beginsAt.toString().replace("GMT+0000 (GMT Standard Time)", "");
                                endsAt = endsAt.toString().replace("GMT+0000 (GMT Standard Time)", "");
                                beginsAt = moment(beginsAt, "ddd MMM DD YYYY HH:mm:ss");
                                endsAt = moment(endsAt, "ddd MMM DD YYYY HH:mm:ss");
                                //Add Values to Json
                                newEvent['title'] = name;
                                newEvent['beginsAt'] = beginsAt.format();
                                newEvent['endsAt'] = endsAt.format();
                                newEvent['room'] = room;
                                newEvent['course'] = course;
                                newEvent['description'] = description;

                                $('#addEventModal').modal('hide');

                                //Sanitize Fields
                                $("#new_event_name").val('');
                                $("#datetimepicker_starttime").val('');
                                $("#datetimepicker_endtime").val('');
                                $("#new_event_room").val('');
                                $("#new_event_course").val('');
                                $("#new_event_description").val('');
                                //Request Ajax Send to Database.
                                requestGetType("/AddEvent/AddEvent", newEvent);

                            } else {
                                console.log("Verify if it's everything ok with your input");
                            }

                        } else {
                            console.log("ERROR: Can't Store an event for a previous date");
                            console.log("This Should be block no problem.");
                        }
                    });


            });
    </script>



}
<!--}
else
{
    <h1>Please Sign Up to be able to see the content.</h1>
}-->

