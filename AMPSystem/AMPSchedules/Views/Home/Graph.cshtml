@using Resources
<!--  Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license.
        See LICENSE in the source repository root for complete license information. -->

@{
  ViewBag.Title = Resource.App_Name;
}
@section style
{
    @Styles.Render("~/Content/fullcalendar.min.css")
    @Styles.Render("~/Content/ColorPicker/jquery.simplecolorpicker.css")
    @Styles.Render("~/Content/button.css")
    @Styles.Render("~/Content/jquery.datetimepicker.min.css")


}
<h1 style="text-align: center">Hello, @(System.Security.Claims.ClaimsPrincipal.Current.FindFirst("preferred_username")?.Value)</h1>

    <br/>
    <br/>
<div class="">
    <div class="col-sm-3">
        <p>Filters By Name:</p>
        <input type="checkbox" name="ClassName" value="Calculos I">Calculos I<br>
        <input type="checkbox" name="ClassName" value="Desenho e Implementação de Software">Desenho e Implementação de Software<br>
        <br>
        <p>Filter by Type: </p>
        <input type="checkbox" name="Type" value="Lesson">Lesson<br />
        <input type="checkbox" name="Type" value="EvaluationMoment">EvaluationMoment<br>
        <input type="checkbox" name="Type" value="OfficeHours">OfficeHours<br>
        <br />
    </div>
    <div class="col-sm-9" id='calendar'></div>
    <div class="addEventButton">
        <button type="button" class="btn-circle btn-lg" id="addEvent">
            <i class="glyphicon glyphicon-plus iconPlus"></i>
        </button>
    </div>
</div>

<div id="fullCalModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                <h4 id="modalTitle" class="modal-title"></h4>
            </div>
            <div id="modalBody" class="modal-body">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="#1" data-toggle="tab">Info</a>
                    </li>
                    <li>
                        <a href="#2" data-toggle="tab">Color</a>
                    </li>
                    <li>
                        <a href="#3" data-toggle="tab">Alert</a>
                    </li>
                </ul>

                <div class="tab-content ">
                    <div class="tab-pane active" id="1">
                        <p>
                            Start: <span id="startTime"></span>
                        </p>
                        <p>
                            End: <span id="endTime"></span>
                        </p>
                        <p id="description"></p>
                    </div>
                    <div class="tab-pane" id="2">
                        <p>You can change the color of each occurence of the item you selected.</p>
                        <select name="colorpicker">
                            <option value="#337ab7">Default Blue</option>
                            <option value="#7bd148">Green</option>
                            <option value="#5484ed">Bold blue</option>
                            <option value="#a4bdfc">Blue</option>
                            <option value="#46d6db">Turquoise</option>
                            <option value="#7ae7bf">Light green</option>
                            <option value="#51b749">Bold green</option>
                            <option value="#fbd75b">Yellow</option>
                            <option value="#ffb878">Orange</option>
                            <option value="#ff887c">Red</option>
                            <option value="#dc2127">Bold red</option>
                            <option value="#dbadff">Purple</option>
                            <option value="#e1e1e1">Gray</option>
                        </select>
                    </div>
                    <div class="tab-pane" id="3">
                        <form id="alertForm">
                            <label class="control-label">Configure Alerts</label>
                            <div class="col-sm-12 form-group">
                                <div class="col-sm-5">
                                    <input class="form-control" />
                                </div>
                                <div class="col-sm-5">
                                    <select class="form-control">
                                        <option>Minutes</option>
                                        <option>Hours</option>
                                        <option>Days</option>
                                        <option>Weeks</option>
                                    </select>
                                </div>
                                <div class="col-sm-2">
                                    <button class="rm-alert btn btn-danger">Remove</button>
                                </div>
                            </div>
                        </form>
                        <button id="addAlert" class="btn btn-default">Add new alert</button>
                    </div>
                </div>
            </div>
                  
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" id="submit">Save</button>
            </div>
        </div>
    </div>
</div>

           

<div id="addEventModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                <h4 id="modalTitle" class="modal-title-addEvent"></h4>
            </div>
            <div id="modalBody" class="modal-body">
                <label for="new_event_name">Event Name: </label>
                <input id="new_event_name">
                <br/>
                <label for="new_event_startTime">Start Time: </label>
                <input id="datetimepicker_starttime" type="text">

                <br />
                <label for="new_event_endTime">End Time: </label>
                <input id="datetimepicker_endtime" type="text">

                <br />
                <label for="new_event_room">Room: </label>
                <input id="new_event_room">
                <br />
                <label for="new_event_room">Course: </label>
                <input id="new_event_course">
                <br />
                <label for="new_event_room">Description: </label>
                <input id="new_event_description">

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" id="saveNewEvent">Save</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/Scripts/moment-with-locales.min.js")
    @Scripts.Render("~/Scripts/fullcalendar.min.js")
    @Scripts.Render("~/Scripts/ColorPicker/jquery.simplecolorpicker.js")

    @Scripts.Render("~/Scripts/jquery.datetimepicker.full.js")


    <script>
        //Renders the calendar.
        function calendar(urlToRequestData) {
            // page is now ready, initialize the calendar...
            $('#calendar')
                .fullCalendar({
                    // put your options and callbacks here
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    defaultDate: '2016-12-12',
                    navLinks: true, // can click day/week names to navigate views
                    editable: true,
                    eventLimit: true, // allow "more" link when too many events
                    events: '' + urlToRequestData + '',
                    eventClick: function(event, jsEvent, view) {
                        console.log(event);
                        console.log(moment(event.start).format("MMM Do H:mm"));
                        $('#modalTitle').html(event.title);
                        $('#startTime').html(moment(event.start).format("MMM Do H:mm"));
                        $('#endTime').html(moment(event.end).format("MMM Do H:mm"));
                        $('#description').html(event.description);
                        $('#eventUrl').attr('href', event.url);
                        $('#fullCalModal').modal();
                    }
                });
        }


        //Load The Calendar with it's default events, the color picker and the datetime pickers
        $()
            .ready(function() {
                calendar('/Home/CalendarDefaultData');
                $('select[name="colorpicker"]').simplecolorpicker();

                $("#datetimepicker_starttime").datetimepicker({
                    minDate: 0,
                    minTime: 0
                });
            });

        //Allow to modify colors and add alerts.
        $()
            .ready(function() {
                $("#addAlert")
                    .click(function() {
                        $("#alertForm")
                            .append('' +
                                '<div class="col-sm-12 form-group">' +
                                '<div class="col-sm-5">' +
                                '<input class="form-control" />' +
                                '</div>' +
                                '<div class="col-sm-5">' +
                                '<select class="form-control">' +
                                '<option>Minutes</option>' +
                                '<option>Hours</option>' +
                                '<option>Days</option>' +
                                '<option>Weeks</option>' +
                                '</select>' +
                                '</div>' +
                                '<div class="col-sm-2">' +
                                '<button class="rm-alert btn btn-danger">Remove</button>' +
                                '</div>' +
                                '</div>'
                            );
                    });

                $("#alertForm")
                    .on("click",
                        ".rm-alert",
                        function(e) {
                            alert("asd");
                            e.preventDefault();
                            $(this).parent().parent().remove();
                        });

                $("#submit").click(function() {
                    if ($("#1").hasClass('active')) {
                        console.log("Do Stuff 1");
                        $('#fullCalModal').modal('hide');
                    } else if ($("#2").hasClass('active')) {
                        var colorApplyer = {};
                        //                  Event Name                  Color Picked for the event Selected.
                        colorApplyer[$('#modalTitle').text()] = $('select[name="colorpicker"]').val();
                        //Request Data
                        requestGetType("/Home/EventColor", colorApplyer);
                        $('#fullCalModal').modal('hide');
                    } else if ($("#3").hasClass('active')) {
                        console.log("Do Stuff 3");
                        $('#fullCalModal').modal('hide');
                    }
                });
            });

        //Apply Filters
        $()
            .ready(function() {
                var selectedFilter = $("input[type=checkbox]");
                var selectedElement = undefined;
                var FilterToApply = {};

                selectedFilter.change(function() {
                    selectedElement = $(this);
                    if ($(this).is(':checked')) {
                        FilterToApply[$(this).val()] = $(this).attr('name');

                        //All filters from the same type will be bocked
                        selectedFilter.each(function() {
                            if ($(this).attr('name') == selectedElement.attr('name') &&
                                $(this).val() != selectedElement.val()) {
                                $(this).attr("disabled", true);
                            }
                        });
                        //Ajax Request
                        requestGetType("/Home/AddFilter", FilterToApply);
                    } else {
                        var valueToRemove = $(this).val();
                        delete FilterToApply[valueToRemove];


                        selectedFilter.each(function() {
                            if ($(this).attr('name') == selectedElement.attr('name') &&
                                $(this).val() != selectedElement.val()) {
                                $(this).removeAttr('disabled');
                            }
                        });

                        //Ajax Request -- Update the data 
                        requestGetType("/Home/AddFilter", FilterToApply);
                    }
                });
            });

        //Makes Request to the server -> Updates Stuff on Calendar
        function requestGetType(requesturl, data) {
            console.log(data);
            console.log(JSON.stringify(data));
            $.ajax({
                type: "GET",
                url: requesturl,
                data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(events) {
                    $('#calendar').fullCalendar('removeEvents'); //Removes Everything
                    $('#calendar').fullCalendar('addEventSource', events); //Gets The Event
                    $('#calendar').fullCalendar('rerenderEvents');
                },
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });
        }

        //Show the model for a new event addtion
        $().ready(function() {
            //When Button is Clicked open modal to add Event
            $("#addEvent").click(function() {
                $(".modal-title-addEvent").html("Add a New Event");
                $("#addEventModal").modal();
            });

            //If the first value is changed after it's assigned remove the datepicker bellow
            $("#datetimepicker_starttime").change(function() {
                var startTime = $('#datetimepicker_starttime').datetimepicker('getValue');
                if (startTime == null) {
                    $("#datetimepicker_endtime").datetimepicker('destroy');
                    if ($("#datetimepicker_endtime").text !== "") {
                        $("#datetimepicker_endtime").val('');
                        console.log("Cleaning");
                    }
                } else {
                    //TODO: Get the time from the previous datepciker and make this one start from that time.
                    $("#datetimepicker_endtime").datetimepicker({
                        minDate: 0,
                        minTime: 0
                    });
                }
            });


            //Submit the Data of a new event
            $("#saveNewEvent").click(function() {
                var startTime = $('#datetimepicker_starttime').datetimepicker('getValue');
                var endtime = $("#datetimepicker_endtime").datetimepicker('getValue');
                var today = new Date();
                //Checking if the choosen time are greater than now and end time is greater than start time.
                if (startTime > today && endtime > today && endtime > startTime) {
                    var newEvent = {}; //Generates the json to send to the server and store it in the database.
                    var name = $("#new_event_name").val();
                    var beginsAt = $("#datetimepicker_starttime").datetimepicker('getValue');
                    var endsAt = $("#datetimepicker_endtime").datetimepicker('getValue');
                    var room = $("#new_event_room").val();
                    var course = $("#new_event_course").val();
                    var description = $("#new_event_description").val();
                    //Check if there is any empty field
                    if (name !== "" && beginsAt !== "" && endsAt !== "" && room !== "" && $.isNumeric(room) && course !== "" && description !== "") {
                        newEvent['title'] = name;
                        newEvent['start'] = beginsAt;
                        newEvent['end'] = endsAt;
                        newEvent['room'] = room;
                        newEvent['course'] = course;
                        newEvent['description'] = description;
                        //Add To Calendar
                        $('#calendar').fullCalendar('renderEvent', newEvent);
                        $('#addEventModal').modal('hide');

                        //Sanitize Fields
                        $("#new_event_name").val('');
                        $("#datetimepicker_starttime").val('');
                        $("#datetimepicker_endtime").val('');
                        $("#new_event_room").val('');
                        $("#new_event_course").val('');
                        $("#new_event_description").val('');
                        //Request Ajax Send to Database.


                    } else {
                        console.log("Verify if it's everything ok with your input");
                    }

                } else {
                    console.log("ERROR: Can't Store an event for a previous date");
                    console.log("This Should be block no problem.");
                }
            });


        });
    </script>



}
<!--}
else
{
    <h1>Please Sign Up to be able to see the content.</h1>
}-->

