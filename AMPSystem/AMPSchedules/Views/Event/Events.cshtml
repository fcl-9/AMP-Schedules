@{
    ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style
{
    @Styles.Render("~/Content/ColorPicker/jquery.simplecolorpicker.css")
    @Styles.Render("~/Content/button.css")
    @Styles.Render("~/Content/bootstrap-datetimepicker.css")
@Styles.Render("~/Content/events.css")


}
<h2 style="text-align: center">Events</h2>
<br />
<br />
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <h4>Today's Events</h4>
            <br />
            <div class="NextEvent" id="NextEvent">

            </div>
        </div>
        <div class="col-sm-6">
            <h4 style="text-align: left">Future Events</h4>
            <ul id="eventLimit" class="nav nav-tabs">
                <li role="presentation" class="active tab">
                    <a>Tomorrow</a>
                </li>
                <li role="presentation" class="tab">
                    <a>In 2 days</a>
                </li>
                <li role="presentation" class="tab">
                    <a>In 3 days</a>
                </li>
            </ul>
            <div class="tab-content FutureEvents">
                <br />
                <div class="tab-pane active" id="FutureEvents">
                </div>
            </div>
            <br />
            <div class="FutureEvents" id="FutureEvents">
            </div>
        </div>
    </div>
</div>


@Html.Partial($"_EventModalPartial")
@Html.Partial($"_AddEventPartial")

@section scripts
{
    @Scripts.Render("~/Scripts/moment-with-locales.min.js")
    @Scripts.Render("~/Scripts/ColorPicker/jquery.simplecolorpicker.js")
    @Scripts.Render("~/scripts/bootstrap-datetimepicker.js")
    @Scripts.Render("~/scripts/jquery.validate.js")
    @Scripts.Render("~/scripts/javascript/functions.js")
    @Scripts.Render("~/scripts/jquery.countdown.min.js")

    <script>
        var currentEvent = null;
        var start = new Date();
        var end = new Date();
        updateDateInterval(1);

        var viewCalendar = false;

        $(function() {

            $('div.segmented-control a').on('click',
                function() {

                    $('div.segmented-control a').each(function(i, e) {
                        $(e).removeClass('active');
                    });

                    $(this).addClass('active');
                    $(this).find('input').prop('checked', true);
                    return false;
                });

        });

        function changeFunc($i) {
            $("#NextEvent").html("");
            $("#FutureEvents").html("");
            updateDateInterval($i);
            requestEvents(printInformation);
        }

        $().ready(function() {
            Initializations();

            requestEvents(printInformation, 1);
            $("#eventLimit .tab").click(function(e) {
                $(e.target).tab("show");
                if ($(e.target).html() == "Tomorrow") {
                    changeFunc(1);
                } else {
                    changeFunc($(e.target).html().replace(/[^\d.]/g, ''));
                }
            });
            $("body").on("click",
                ".glyphicon-cog",
                function() {
                    var event = JSON.parse($(this).parent().find("input[type = hidden]").val());
                    renderEventModal(event);
                });
        });

        function addDays(date, days) {
            var result = new Date(date);
            result.setDate(result.getDate() + parseInt(days));
            return result;
        }

        //Ajax Request for events
        function requestEvents(returnFunction) {
            $.ajax({
                type: "GET",
                url: '/Event/ReturnEvents?start=' + start + '&end=' + end,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: returnFunction,
                failure: function(response) {
                    console.log("Fail");
                    alert(response.d);
                }
            });
        }

        //Adds Information to the page
        function printInformation(events) {
            //console.log(events);
            var className = undefined;
            var startTime = undefined;
            var endTime = undefined;
            var classRoom = undefined;
            var floor = undefined;
            var reminder = undefined;
            var color = undefined;
            var initialDate = new Date();
            initialDate = moment(initialDate).format("YYYY-MM-DD");
            $.each(sortBy(events, { prop: "start" }),
                function(key, value) {
                    //console.log(value);
                    className = value.title;
                    startTime = value.start;
                    endTime = value.end;
                    color = value.color;

                    if (value.reminder == null || value.reminder === "" || value.reminder === undefined) {
                        reminder = "There are no reminders for this event";
                    } else {
                        reminder = value.reminder;
                    }
                    $.each(value.rooms,
                        function(property, val) {
                            classRoom = val.Name;
                            floor = val.Floor;
                        });
                    if (initialDate === moment(startTime).format("YYYY-MM-DD")) {
                        renderTodayEvent(className,startTime,classRoom,floor,color,JSON.stringify(value),reminder,endTime);
                    } else {
                        renderFutureEvent(className,startTime,classRoom,floor,color,JSON.stringify(value),reminder,endTime);
                    }


                });
            countDown(); //Adds the countdown
            checkFinished(); //Changes the color of items that are 00:00:00
        }

        //Renders the actual events
        function renderTodayEvent(className, startTime, classRoom, floor, color, eventInfo, reminder, endTime) {

            var dataAtual = new Date();
            var dataStartTime = new Date(startTime);

            if (dataAtual.getHours() < dataStartTime.getHours()) {
                //Evento will start
                eventColorInfo = color;
            } else {
                //Event Started
                eventColorInfo = "rgba(152, 152, 152, 0.901961)";
            }

            $('.NextEvent').append(
                '<div class="panel-group" >' +
                '<div class="panel panel-primary ">' +
                '<div class="panel-body header" style="background-color:' +
                eventColorInfo +
                '">' +
                '<input type="hidden" value=\'' +
                eventInfo +
                '\'>' +
                '<span style="float:right"  class="glyphicon glyphicon-cog" aria-hidden="true"></span>' +
                '<p>' +
                className +
                '</p></div>' +
                '<div class="panel-body">' +
                '<p>Inicio: ' +
                moment(startTime).format("ddd Do MMM H:mm") +
                '</p>' +
                '<p>Fim:' +
                moment(endTime).format("ddd Do MMM H:mm") +
                '</p>' +
                '<p>' +
                classRoom +
                '</p>' +
                '<p>Piso: ' +
                floor +
                '</p>' +
                '<br>' +
                '<p>Reminder:' +
                reminder +
                '</p>' +
                '</div>' +
                '<div class="panel-body footer"><p>' +
                startTime +
                '</p></div>' +
                '</div>' +
                '</div>'
            );
        }

        //Renders Future Events
        function renderFutureEvent(className, startTime, classRoom, floor, color, eventInfo, reminder, endTime) {
            $('#FutureEvents').append(
                '<div class="panel-group">' +
                '<div class="panel panel-primary">' +
                '<div class="panel-body header" style="background:' +
                color +
                '">' +
                '<input type="hidden" value=\'' +
                eventInfo +
                '\'>' +
                '<span style="float:right"  class="glyphicon glyphicon-cog" aria-hidden="true"></span>' +
                '<p>' +
                className +
                '</p></div>' +
                '<div class="panel-body">' +
                '<p>Inicio: ' +
                moment(startTime).format("ddd Do MMM H:mm") +
                '</p>' +
                '<p>Fim:' +
                moment(endTime).format("ddd Do MMM H:mm") +
                '</p>' +
                '<p>' +
                classRoom +
                '</p>' +
                '<p>Piso: ' +
                floor +
                '</p>' +
                '<br>' +
                '<p>Reminder:' +
                reminder +
                '</p>' +
                '</div>' +
                '</div>' +
                '</div>'
            );

        }

        //Makes the countdown work
        function countDown() {
            $(".footer").each(function() {
                var divTime = $(this).first().text();
                var endTimeConversion = moment(divTime, "YYYY-MM-DTHH:mm:ss").format("YYYY/MM/DD HH:mm:ss");
                //$(this).html("");
                $(this).countdown(endTimeConversion,
                    function(event) {
                        $(this).text(
                            event.strftime('Time Left: ' + '%H:%M:%S')
                        );
                    }).on('update.countdown',
                    function(event) {
                        if (event.elapsed) { //If the end has come
                            $(this).html("The event just passed");
                            $(this).css("background-color", "rgba(152, 152, 152, 0.9)");
                            $(this).css("color", "white");


                        } else {
                            if (event.offset
                                .totalMinutes <=
                                10) //Time for the end is less or equal than then just put it in RED
                            {
                                $(this).css("background-color", "rgba(255, 0, 0, 0.9)");
                                $(this).css("color", "white");
                            } else if (event.offset
                                .totalMinutes <=
                                30) { //Time for the end is less than 30 minutes put it in Yellow
                                $(this).css("background-color", "rgba(221, 243, 40, 0.9)");
                                $(this).css("color", "white");
                            } else if (event.offset
                                .totalMinutes >
                                30) { //Time for the end is higher than 30 minutes put it in Yellow
                                $(this).css("background-color", "rgba(51, 233, 44, 0.9)");
                                $(this).css("color", "white");
                            }
                        }
                    });
            });

        }

        //When you login need to check if any to the times has changed
        //Changes the colors if we login and the countdown is 00:00:00
        function checkFinished() {
            $(".footer").each(function() {
                var divTime = $(this).first().text();
                if (divTime === "Time Left: 00:00:00") {
                    $(this).html("The event just passed");
                    $(this).css("background-color", "rgba(152, 152, 152, 0.9)");
                    $(this).css("color", "white");
                    $(this).prev().css('color', '#757171').css("background-color", "rgba(187, 187, 187, 0.19)");
                }
            });
        }

        function updateDateInterval(dayInterval) {
            var mStart = new Date();
            var hh = mStart.getHours();
            var mm = mStart.getMinutes();
            var ss = mStart.getSeconds();
            if (hh < 10) {
                hh = "0" + hh;
            }
            if (mm < 10) {
                mm = "0" + mm;
            }
            if (ss < 10) {
                ss = "0" + ss;
            }
            end = moment(addDays(mStart, dayInterval)).format("YYYY-MM-DD");
            start = moment(mStart).format("YYYY-MM-DD");
            end += 'T23:53:53';
        }
        //Presents officehours of week


        var sortBy = (function() {

            const _defaults = {
                parser: (x) => x,
                desc: false
            };

            const isObject = (o) => o !== null && typeof o === "object";
            const isDefined = (v) => typeof v !== "undefined";

            //gets the item to be sorted
            function getItem(x) {
                const isProp = isObject(x) && isDefined(x[this.prop]);
                return this.parser(isProp ? x[this.prop] : x);
            }

            return function(array, options) {
                if (!(array instanceof Array) || !array.length)
                    return [];
                const opt = Object.assign({}, _defaults, options);
                opt.desc = opt.desc ? -1 : 1;
                return array.sort(function(a, b) {
                    a = getItem.call(opt, a);
                    b = getItem.call(opt, b);
                    return opt.desc * (a < b ? -1 : +(a > b));
                });
            };

        }());

        //Calls all functions
        function Initializations() {
            //Add the Color Picker that's inside alerts modal
            $('select[name="colorpicker"]').simplecolorpicker();
            // Configures validator
            configureValidator();
            //Ajax Request
            getCourses(renderFilterCheckBoxes);
            //Binds Events to Alerts Modal
            AlertModalFunctions();
            // Binds Event to Add Event Button
            bindAddEventButton();
            //Renders the DatePickers
            renderDatePickers();
            //Removes User Added Events
            removeUserAddedEvents();
            //Adds Validator to New Event Submission Form
            addJqueryValidator();
            //Submit the Data of a new event
            saveNewEventBtt();
            //Request for active events that belong to a user
            clickTabFour();
            //Removes Active Alert From the Database
            removeActiveAlert();


        }

    </script>



}